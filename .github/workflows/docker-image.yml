name: Docker Image CI

on: push

jobs:
  linux:
    name : Generate for Linux
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Yadoms build script
      uses: Yadoms/build-yadoms-action@v4.beta1
      id: yadoms_build_step
      with:
          buildImage: ghcr.io/yadoms/build_for_linux:latest
          registry: ghcr.io
          username: ${{ secrets.CONTAINER_GH_LOGIN }}
          password: ${{ secrets.CONTAINER_GH_TOKEN }}
          entrypoint: 'sh /entrypoint_docker.sh'
    - name: Get tag/branch name
      id: vars
      run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
    - name: Create Release (on Tag only)
      id: create_release
      uses: ncipollo/release-action@v1
      if: contains(github.ref, 'refs/tags/')
      with:
        tag: ${{ github.ref }}
        name: ${{ steps.vars.outputs.tag }}
        draft: true
        prerelease: true
        allowUpdates: true
        omitNameDuringUpdate: true
        replacesArtifacts: true
        artifacts: "./builds/package/*"
        token: ${{ secrets.GITHUB_TOKEN }}
    
  MacOSX:
    name : Generate for MacOSX
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Yadoms build script
      uses: Yadoms/build-yadoms-action@v4.beta1
      id: yadoms_build_step
      with:
          buildImage: ghcr.io/yadoms/build_for_macos:latest
          registry: ghcr.io
          username: ${{ secrets.CONTAINER_GH_LOGIN }}
          password: ${{ secrets.CONTAINER_GH_TOKEN }}
          entrypoint: 'sh /entrypoint_docker.sh'
    - name: Get tag/branch name
      id: vars
      run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
    - name: Create Release (on Tag only)
      id: create_release
      uses: ncipollo/release-action@v1
      if: contains(github.ref, 'refs/tags/')
      with:
        tag: ${{ github.ref }}
        name: ${{ steps.vars.outputs.tag }}
        draft: true
        prerelease: true
        allowUpdates: true
        omitNameDuringUpdate: true
        replacesArtifacts: true
        artifacts: "./builds/package/*"
        token: ${{ secrets.GITHUB_TOKEN }}
        
  Synology218p:
    name : Generate for Synology 218+
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Yadoms build script
      uses: Yadoms/build-yadoms-action@v4.beta1
      id: yadoms_build_step
      with:
          buildImage: ghcr.io/yadoms/build_for_synology218p:latest
          registry: ghcr.io
          username: ${{ secrets.CONTAINER_GH_LOGIN }}
          password: ${{ secrets.CONTAINER_GH_TOKEN }}
          entrypoint: 'sh /entrypoint_docker.sh'
    - name: Get tag/branch name
      id: vars
      run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
    - name: Create Release (on Tag only)
      id: create_release
      uses: ncipollo/release-action@v1
      if: contains(github.ref, 'refs/tags/')
      with:
        tag: ${{ github.ref }}
        name: ${{ steps.vars.outputs.tag }}
        draft: true
        prerelease: true
        allowUpdates: true
        omitNameDuringUpdate: true
        replacesArtifacts: true
        artifacts: "./builds/package/*"
        token: ${{ secrets.GITHUB_TOKEN }}     

  RapsberryPI:
    name : Generate for RaspberryPI (all versions)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Yadoms build script
      uses: Yadoms/build-yadoms-action@v4.beta1
      id: yadoms_build_step
      with:
          buildImage: ghcr.io/yadoms/build_for_raspberrypi:latest
          registry: ghcr.io
          username: ${{ secrets.CONTAINER_GH_LOGIN }}
          password: ${{ secrets.CONTAINER_GH_TOKEN }}
          privileged: '--privileged'
          entrypoint: 'sh /entrypoint_docker.sh'
    - name: Get tag/branch name
      id: vars
      run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
    - name: Create Release (on Tag only)
      id: create_release
      uses: ncipollo/release-action@v1
      if: contains(github.ref, 'refs/tags/')
      with:
        tag: ${{ github.ref }}
        name: ${{ steps.vars.outputs.tag }}
        draft: true
        prerelease: true
        allowUpdates: true
        omitNameDuringUpdate: true
        replacesArtifacts: true
        artifacts: "./builds/package/*"
        token: ${{ secrets.GITHUB_TOKEN }}     
        
  Windows:
    name : Generate for Windows
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Yadoms build script
      uses: Yadoms/build-yadoms-windows-action@v2.beta2
      id: yadoms_build_step
      with:
          buildImage: ghcr.io/yadoms/build_for_windows:latest
          registry: ghcr.io
          username: ${{ secrets.CONTAINER_GH_LOGIN }}
          password: ${{ secrets.CONTAINER_GH_TOKEN }}
          entrypoint: 'powershell.exe -Command C:\entrypoint_docker.ps1'
    - name: Get tag/branch name
      id: vars
      run: Write-Host "::set-output name=tag::$( $env:GITHUB_REF -replace '^refs/.*/(.*)$','$1')"
      shell: powershell
    - name: List content
      run:  |
        Get-ChildItem -Path "./builds/package/"
        Write-Host ($env:GITHUB_REF)
        Write-Host "Tag = $( $env:GITHUB_REF -replace '^refs/.*/(.*)$','$1')"
      shell: powershell
    - name: Create Release (on Tag only)
      id: create_release
      uses: ncipollo/release-action@v1
      if: contains(github.ref, 'refs/tags/')
      with:
        tag: ${{ github.ref }}
        name: ${{ steps.vars.outputs.tag }}
        draft: true
        prerelease: true
        allowUpdates: true
        omitNameDuringUpdate: true
        replacesArtifacts: true
        artifacts: "./builds/package/*"
        token: ${{ secrets.GITHUB_TOKEN }}     
                
