include(ExternalProject)
include(SelectLibraryConfigurations)

set(CURL_ROOT ${CMAKE_BINARY_DIR}/external-libs/curl)

list(APPEND CURL_BUILD_ARGS "-DBUILD_CURL_EXE=OFF")
list(APPEND CURL_BUILD_ARGS "-DBUILD_SHARED_LIBS=OFF")
if(WIN32)
   list(APPEND CURL_BUILD_ARGS "-DCURL_STATIC_CRT=ON")
else()
   list(APPEND CURL_BUILD_ARGS "-DCMAKE_POSITION_INDEPENDENT_CODE=ON")
endif()

# Enable only needed protocols
list(APPEND CURL_BUILD_ARGS "-DCURL_DISABLE_FTP=ON")
list(APPEND CURL_BUILD_ARGS "-DCURL_DISABLE_LDAP=ON")
list(APPEND CURL_BUILD_ARGS "-DCURL_DISABLE_TELNET=ON")
list(APPEND CURL_BUILD_ARGS "-DCURL_DISABLE_DICT=ON")
list(APPEND CURL_BUILD_ARGS "-DCURL_DISABLE_FILE=ON")
list(APPEND CURL_BUILD_ARGS "-DCURL_DISABLE_TFTP=ON")
list(APPEND CURL_BUILD_ARGS "-DCURL_DISABLE_HTTP=OFF")
list(APPEND CURL_BUILD_ARGS "-DCURL_DISABLE_LDAPS=ON")
list(APPEND CURL_BUILD_ARGS "-DCURL_DISABLE_RTSP=ON")
list(APPEND CURL_BUILD_ARGS "-DCURL_DISABLE_PROXY=OFF")
list(APPEND CURL_BUILD_ARGS "-DCURL_DISABLE_POP3=ON")
list(APPEND CURL_BUILD_ARGS "-DCURL_DISABLE_IMAP=ON")
list(APPEND CURL_BUILD_ARGS "-DCURL_DISABLE_SMB=ON")
list(APPEND CURL_BUILD_ARGS "-DCURL_DISABLE_SMTP=ON")
list(APPEND CURL_BUILD_ARGS "-DCURL_DISABLE_GOPHER=ON")
list(APPEND CURL_BUILD_ARGS "-DCURL_DISABLE_MQTT=ON")
list(APPEND CURL_BUILD_ARGS "-DCMAKE_USE_OPENSSL=ON")

if(CMAKE_TOOLCHAIN_FILE)
   message("CURL : cross compilation (toolchain:${CMAKE_TOOLCHAIN_FILE}, with ${CC_RPI_GCC} and ${CC_RPI_GXX})")
   #in case of cross compiling, need to append the toolchain file to ExternalProject
   list(APPEND CURL_BUILD_ARGS "-DCC_RPI_ROOT=${CC_RPI_ROOT}")
   list(APPEND CURL_BUILD_ARGS "-DCC_RPI_GCC=${CC_RPI_GCC}")
   list(APPEND CURL_BUILD_ARGS "-DCC_RPI_GXX=${CC_RPI_GXX}")
   list(APPEND CURL_BUILD_ARGS "-DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}")
endif(CMAKE_TOOLCHAIN_FILE)

ExternalProject_Add(curl_build
   URL               https://curl.se/download/curl-7.76.1.zip
   PREFIX            ${CURL_ROOT}
   CMAKE_ARGS        ${CURL_BUILD_ARGS}
   INSTALL_COMMAND   ""
   BUILD_ALWAYS      OFF
)

SET_PROPERTY(TARGET curl_build PROPERTY FOLDER "External Libs")

ExternalProject_Get_Property(curl_build INSTALL_DIR)
set(CURL_INCLUDE_DIR ${INSTALL_DIR}/src/curl_build/include PARENT_SCOPE)

if(WIN32)
   set(CURL_LIBRARY ${INSTALL_DIR}/src/curl_build-build/lib/$<CONFIG>/libcurl$<$<CONFIG:Debug>:-d>.lib PARENT_SCOPE)
else()
   set(CURL_LIBRARY ${INSTALL_DIR}/src/curl_build-build/lib/libcurl.a PARENT_SCOPE)
endif()
