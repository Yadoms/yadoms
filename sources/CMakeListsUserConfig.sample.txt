################################################################################################
# This file contains user specific configuration
# It may contains some directory definitions
#
##### Note : for all paths, use only absolute paths, and do not use anti slash : only '/' ######
#
################################################################################################


##### Boost ######
#
#define Boost ROOT
set(BOOST_ROOT "/path/to/boost")


##### Poco ######
#
#define Poco ROOT
set(POCO_ROOT "path/to/poco")


##### OpenSSL ######
#
#define OpenSSL ROOT
set(OPENSSL_ROOT "path/to/openssl")


##### Protobuf ######
#
#define Protobuf ROOT
set(PROTOBUF_ROOT "path/to/protobuf")
#
# if ON, then use path of generated file in case "make install" of protobuf has been done into a custom folder
# this is very usefull, and bypass bad finding protobuf with cmake < 3.9
#set(PROTOBUF_INSTALLED_TO_CUSTOM_DIRECTORY ON)


##### Database ######
#
# PostgreSQL
#define PostgreSQL ROOT (if not found, PostgreSQL will not be available in project)
#set(PostgreSQL_ROOT "F:/ProjetsPerso/postgresql-9.4.6-1-windows-binaries/pgsql")


##### Cross compilation ######
#
# 
#define CC_RPI_ROOT to cross compile for Raspberry PI (from a linux machine)
#depending on linux machine architecture (32/64), choose from the first or second line
#set(CC_RPI_ROOT /path/to/raspberry/git/tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian)
#set(CC_RPI_ROOT /path/to/raspberry/git/tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64)

#activate this option to enable eclipse debugging
set(DEBUG_WITH_GCC OFF)



# Cotire script speed up compilation

#activate use of cotire
SET(COTIRE_USE ON)
#activate use of cotire unity mode (COTIRE_USE must be set to ON to use COTIRE_USE_UNITY)
SET(COTIRE_USE_UNITY ON)




################################################################################################
# Next sections are optionnals
# There are needed to activate some parts of Yadoms (script interpreters, plugins, etc...)
# They can be disabled if the corresponding part is not needed.
################################################################################################


##### CMake ######
#
# If defined, search for an alternative cmake ROOT (By default, search cmake in path)
# Actually works under Windows only
#set(ALTERNATIVE_CMAKE_ROOT "/path/to/cmake")


##### Analysis ######
#
# Tools needed for code analysis
#set(CPPCHECK_ROOT "path/to/cppcheck")
#set(SONARQUBE_SCANNER_ROOT "path/to/sonar-scanner")


##### Plugin SmsDialer #####
#
# Plugin SmsDialer needs Gammu
#
#set(GAMMU_ROOT "/path/to/gammu/gammu-1.38.0")


##### Script interpreters ######
#
# Script interpreters needs Swig (needed for all script interpreters)
# if swig is installed on system (make install), just define SWIG_ROOT to ""
# else specify the path containing the swig executable
set(SWIG_ROOT "")


##### Python 2.7.x interpreter ######
#
#define Python 2.7.x ROOT
# For using pre-installed Python version (Linux for example), don't define PYTHON27_ROOT
# For Windows, download Python from "https://www.python.org/downloads/windows/" (Need Python 2.7.x 32-bit version)
#set(Python2_ROOT "/path/to/Python27")

#Select Python 2.7.x installation
#set PYTHON27_USE_SOURCES to OFF to use Python installer version (only release version. Available here for Windows : https://www.python.org/downloads/windows/).
#set PYTHON27_USE_SOURCES to ON to use Python sources (https://www.python.org/downloads/source/), which need to be compiled.
set(PYTHON27_USE_SOURCES OFF)


##### Python 3.x interpreter ######
#
#define Python 3.x ROOT
# For using pre-installed Python version (Linux for example), don't define PYTHON3_ROOT
# For Windows, download Python from "https://www.python.org/downloads/windows/" (Need Python 3.x 32-bit version)
#set(Python3_ROOT "/path/to/Python3")

#Select Python 3.x installation
#set PYTHON3_USE_SOURCES to OFF to use Python installer version (only release version. Available here for Windows : https://www.python.org/downloads/windows/).
#set PYTHON3_USE_SOURCES to ON to use Python sources (https://www.python.org/downloads/source/), which need to be compiled.
set(PYTHON3_USE_SOURCES OFF)



##### CPACK ######
#For Windows, it activate making installation package with NSIS; else it use classic ZIP
#set(USE_NSIS ON)
